name: Deploy to Dev

on:
  workflow_call:
  workflow_dispatch:

env:
  AWS_REGION: eu-west-1

jobs:
  deploy-dev:
    name: Deploy and Test on Dev Environment
    runs-on: ubuntu-latest
    environment: development

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      ODDS_API_KEY: ${{ secrets.ODDS_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv pip install --system -r requirements.txt

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.0"

      - name: Build Lambda package
        run: |
          cd deployment/aws
          ./build_lambda.sh

      - name: Terraform Init
        run: |
          cd deployment/aws/terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd deployment/aws/terraform
          terraform plan \
            -var-file="terraform.tfvars.example" \
            -var="database_url=$DATABASE_URL" \
            -var="odds_api_key=$ODDS_API_KEY" \
            -out=tfplan

      - name: Deploy to Dev
        run: |
          cd deployment/aws/terraform
          terraform apply -auto-approve tfplan

      - name: Run database migrations
        run: uv run alembic upgrade head

      - name: Test Lambda functions
        run: uv run python scripts/ci/test_lambda.py --lambda-name odds-scheduler-dev --region ${{ env.AWS_REGION }}

      - name: Verify database writes
        run: uv run python scripts/ci/verify_database.py

      - name: Deployment Summary
        if: success()
        run: |
          echo "âœ… Development deployment completed successfully!"
          echo "Environment: development"
          echo "Region: ${{ env.AWS_REGION }}"
          echo "Note: Infrastructure will be destroyed in cleanup step"

      - name: Cleanup - Destroy dev infrastructure
        if: always()
        run: |
          cd deployment/aws/terraform
          terraform destroy \
            -var-file="terraform.tfvars.example" \
            -var="database_url=$DATABASE_URL" \
            -var="odds_api_key=$ODDS_API_KEY" \
            -auto-approve
        continue-on-error: true

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: dev-deploy-logs
          path: |
            *.log
            *.txt
            deployment/aws/terraform/*.log
