# Betting Odds Pipeline - Environment Configuration
# Copy to .env and fill in your values

# =============================================================================
# SCHEDULER CONFIGURATION
# =============================================================================
# Backend: 'local' (testing), 'aws' (Lambda), or 'railway' (cron)
SCHEDULER_BACKEND=local

# How many days ahead to check for games (default: 7)
SCHEDULER_LOOKAHEAD_DAYS=7

# =============================================================================
# AWS CONFIGURATION (only needed if SCHEDULER_BACKEND=aws)
# =============================================================================
# AWS region for Lambda and EventBridge
AWS_REGION=us-east-1

# Lambda function ARN (get from terraform output or AWS console)
# Example: arn:aws:lambda:us-east-1:123456789012:function:odds-scheduler
AWS_LAMBDA_ARN=

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Primary database URL (used by application)
# Default: points to DEV_DATABASE_URL for safety
DATABASE_URL=${DEV_DATABASE_URL}

# Local PostgreSQL (for development and testing)
LOCAL_DATABASE_URL=postgresql+asyncpg://postgres:dev_password@localhost:5432/odds

# Development/Staging database (Neon dev branch or similar)
DEV_DATABASE_URL=postgresql+asyncpg://user:password@dev-host:5432/odds_dev?ssl=require

# Production database (DO NOT commit real credentials)
# Set this in production environment only (Railway, AWS, etc.)
PROD_DATABASE_URL=postgresql+asyncpg://user:password@prod-host:5432/odds_prod?ssl=require

# Connection pool size (default: 5)
DATABASE_POOL_SIZE=5

# =============================================================================
# THE ODDS API CONFIGURATION
# =============================================================================
# API key from https://the-odds-api.com
ODDS_API_KEY=your_api_key_here

# API base URL (default: https://api.the-odds-api.com/v4)
ODDS_API_BASE_URL=https://api.the-odds-api.com/v4

# Monthly quota (default: 20000)
ODDS_API_QUOTA=20000

# =============================================================================
# DATA COLLECTION CONFIGURATION
# =============================================================================
# Sports to track (comma-separated)
# Available: basketball_nba, basketball_ncaab, etc.
SPORTS=basketball_nba

# Bookmakers to collect (comma-separated)
BOOKMAKERS=pinnacle,circasports,draftkings,fanduel,betmgm,williamhill_us,betrivers,bovada

# Markets to collect (comma-separated)
# Available: h2h, spreads, totals
MARKETS=h2h,spreads,totals

# Regions (comma-separated)
# Available: us, us2, uk, eu, au
REGIONS=us

# =============================================================================
# DATA QUALITY
# =============================================================================
# Enable validation checks (default: true)
ENABLE_VALIDATION=true

# Reject invalid odds vs log only (default: false)
REJECT_INVALID_ODDS=false

# =============================================================================
# ALERTS (infrastructure for future use)
# =============================================================================
# Enable alerts (default: false)
ALERT_ENABLED=false

# Discord webhook URL (optional)
DISCORD_WEBHOOK_URL=

# =============================================================================
# LOGGING
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/odds_pipeline.log

# =============================================================================
# EXAMPLE CONFIGURATIONS
# =============================================================================

# Local Development (APScheduler):
# SCHEDULER_BACKEND=local
# DATABASE_URL=postgresql://postgres:password@localhost:5432/odds_dev

# AWS Lambda Production:
# SCHEDULER_BACKEND=aws
# AWS_REGION=us-east-1
# AWS_LAMBDA_ARN=arn:aws:lambda:us-east-1:123456789012:function:odds-scheduler
# DATABASE_URL=postgresql://user:pass@rds-endpoint:5432/odds_prod

# Railway Production (Cron):
# SCHEDULER_BACKEND=railway
# DATABASE_URL=<railway-provided>
